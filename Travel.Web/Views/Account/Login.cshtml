﻿@{
    ViewData["Title"] = "Login";
    var isLoggedIn = Context.Session.GetString("JWToken") != null;

}

@if (TempData["SuccessMessage"] != null && isLoggedIn)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="loginRegisterBackground">
    <h2 class="text-center my-4">Login</h2>
    <div class="container d-flex justify-content-center">
        <div class="card shadow p-4" style="width: 100%; max-width: 400px;">

            <!-- MAKES POST req to /Account/Login because Login.cshtml is inside Account folder .Net rule -->
            <!-- ASP.NET Core infers the controller based on the current view’s folder name if you don’t explicitly specify  -->
            <!-- So AccountController is responsible to receive POST /Account/Login request  -->
            <form method="post" asp-action="Login">

                <div class="mb-3">
                    <label class="form-label">Username</label>
                    <input type="text" name="UserName" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <input type="password" name="Password" class="form-control" />
                </div>
                <button type="submit" class="btn btn-primary w-100">Login</button>
            </form>
        </div>
    </div>
</div>
