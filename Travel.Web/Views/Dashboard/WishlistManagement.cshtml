﻿@{
    ViewData["Title"] = "Wishlist Management";
    var sectionTitle = ViewData["SectionTitle"] ?? "Manage Wishlist";
    var token = Context.Session.GetString("JWToken");
}

@section Styles {
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet" />
    <style>
        body {
            font-family: 'Roboto', sans-serif;
        }

        .landing-page {
            position: relative;
            background: url('/images/backgroundLandingPage.jpg') no-repeat center center fixed;
            background-size: cover;
            min-height: 100vh;
            padding-top: 40px;
        }

        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 0;
        }

        .dashboard-content {
            position: relative;
            z-index: 1;
            color: #fff;
            text-align: center;
        }

            .dashboard-content h2 {
                font-size: 2.5rem;
                margin-bottom: 30px;
                text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.8);
            }

        .dashboard-card {
            background-color: rgba(255, 255, 255, 0.95);
            color: #333;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

        .wishlist-actions button {
            margin-left: 10px;
        }
    </style>
}

<div class="landing-page">
    <div class="overlay"></div>

    <div class="container dashboard-content">
        <h2>@sectionTitle</h2>
        <div class="dashboard-card">
            <button class="btn btn-success mb-3" onclick="showAddForm()">+ Add to Wishlist</button>

            <div class="table-responsive">
                <div class="table-scroll-wrapper">
                    <table class="table table-bordered table-striped">
                        <thead class="table-light">
                            <tr>
                                <th>Trip Name</th>
                                <th>Date From</th>
                                <th>Date To</th>
                                <th>Price</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="wishlistTableBody"></tbody>
                    </table>
                </div>
            </div>

            <div id="addForm" style="display:none;">
                <h5>Add Trip to Wishlist</h5>
                <select id="tripSelector" class="form-control mb-2"></select>
                <input type="date" id="desiredDateFrom" class="form-control mb-2" placeholder="Desired Start Date" />
                <input type="date" id="desiredDateTo" class="form-control mb-2" placeholder="Desired End Date" />
                <button class="btn btn-primary" onclick="submitWishlist()">Add</button>
                <button class="btn btn-secondary" onclick="hideForm()">Cancel</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        const token = localStorage.getItem("jwtToken");

        function loadWishlist() {
            fetch("https://localhost:7172/api/wishlist", {
                headers: { "Authorization": "Bearer " + token }
            })
            .then(res => res.json())
            .then(data => {
                const tbody = document.getElementById("wishlistTableBody");
                tbody.innerHTML = "";
                data.forEach(item => {
                    tbody.innerHTML += `
                        <tr>
                            <td>${item.tripName}</td>
                            <td>${item.desiredDateFrom?.split('T')[0]}</td>
                            <td>${item.desiredDateTo?.split('T')[0]}</td>
                            <td>${item.tripPrice.toFixed(2)}</td>
                            <td class="wishlist-actions">
                                <button class="btn btn-sm btn-danger" onclick="removeFromWishlist(${item.id})">Remove</button>
                            </td>
                        </tr>`;
                });
            });
        }

        function loadTrips() {
            fetch("https://localhost:7172/api/trip", {
                headers: { "Authorization": "Bearer " + token }
            })
            .then(res => res.json())
            .then(data => {
                const selector = document.getElementById("tripSelector");
                selector.innerHTML = data.map(trip => `<option value="${trip.id}">${trip.name}</option>`).join("");
            });
        }

        function showAddForm() {
            document.getElementById("addForm").style.display = "block";
            loadTrips();
        }

        function hideForm() {
            document.getElementById("addForm").style.display = "none";
        }

        function submitWishlist() {
            const tripId = parseInt(document.getElementById("tripSelector").value);
            const desiredDateFrom = document.getElementById("desiredDateFrom").value;
            const desiredDateTo = document.getElementById("desiredDateTo").value;

            const body = {
                tripId,
                desiredDateFrom: desiredDateFrom || null,
                desiredDateTo: desiredDateTo || null
            };

            fetch("https://localhost:7172/api/wishlist", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                body: JSON.stringify(body)
            })
            .then(res => {
                if (res.ok) {
                    alert("Added to wishlist");
                    loadWishlist();
                    hideForm();
                } else {
                    alert("Failed to add to wishlist");
                }
            });
        }


        function removeFromWishlist(id) {
            if (confirm("Are you sure you want to remove this item?")) {
                fetch(`https://localhost:7172/api/wishlist/${id}`, {
                    method: "DELETE",
                    headers: {
                        "Authorization": "Bearer " + token
                    }
                })
                .then(() => loadWishlist());
            }
        }

        document.addEventListener("DOMContentLoaded", loadWishlist);
    </script>
}