﻿@{
    ViewData["Title"] = "Guide Management";
    var sectionTitle = ViewData["SectionTitle"] ?? "Manage Guides";
    var token = Context.Session.GetString("JWToken");
}

<div class="landing-page">
    <div class="overlay"></div>

    <div class="container dashboard-content">
        <div class="dashboard-card">
            <button class="btn btn-success mb-3" onclick="showAddForm()">+ Add Guide</button>

            <div class="table-responsive">
                <div class="table-scroll-wrapper">
                    <table class="table table-bordered table-striped">
                        <thead class="table-light">
                            <tr>
                                <th>First Name</th>
                                <th class="d-none d-sm-table-cell">Last Name</th>
                                <th class="d-none d-md-table-cell">Email</th>
                                <th class="d-none d-md-table-cell">Biography</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="guideTableBody"></tbody>
                    </table>
                </div>
            </div>

            <div id="addEditForm" style="display:none;">
                <h5 id="formTitle">Add Guide</h5>
                <input type="hidden" id="guideId" />
                <input type="text" id="firstName" placeholder="First Name" class="form-control mb-2" />
                <input type="text" id="lastName" placeholder="Last Name" class="form-control mb-2" />
                <input type="email" id="email" placeholder="Email" class="form-control mb-2" />
                <textarea id="biography" placeholder="Biography" class="form-control mb-2"></textarea>
                <button class="btn btn-primary" onclick="submitForm()">Save</button>
                <button class="btn btn-secondary" onclick="hideForm()">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const token = localStorage.getItem("jwtToken");

        function loadGuides() {
            fetch("https://localhost:7172/api/guide", {
                headers: { "Authorization": "Bearer " + token }
            })
            .then(res => res.json())
            .then(data => {
                const tbody = document.getElementById("guideTableBody");
                tbody.innerHTML = "";
                data.forEach(guide => {
                    tbody.innerHTML += `
                        <tr>
                            <td>${guide.firstName}</td>
                            <td class="d-none d-sm-table-cell">${guide.lastName}</td>
                            <td class="d-none d-md-table-cell">${guide.email}</td>
                            <td class="d-none d-md-table-cell">${guide.biography ?? ''}</td>
                            <td class="guide-actions">
                                <button class="btn btn-sm btn-warning" onclick="editGuide(${guide.id}, '${guide.firstName}', '${guide.lastName}', '${guide.email}', \`${guide.biography ?? ''}\`)">Edit</button>
                                <button class="btn btn-sm btn-danger" onclick="deleteGuide(${guide.id})">Delete</button>
                            </td>
                        </tr>`;
                });
            });
        }

        function showAddForm() {
            document.getElementById("addEditForm").style.display = "block";
            document.getElementById("formTitle").innerText = "Add Guide";
            ["guideId", "firstName", "lastName", "email", "biography"].forEach(id => document.getElementById(id).value = "");
        }

        function editGuide(id, firstName, lastName, email, biography) {
            document.getElementById("addEditForm").style.display = "block";
            document.getElementById("formTitle").innerText = "Edit Guide";
            document.getElementById("guideId").value = id;
            document.getElementById("firstName").value = firstName;
            document.getElementById("lastName").value = lastName;
            document.getElementById("email").value = email;
            document.getElementById("biography").value = biography;
        }

        function hideForm() {
            document.getElementById("addEditForm").style.display = "none";
        }

        function submitForm() {
            const idValue = document.getElementById("guideId").value;
            const id = parseInt(idValue);
            const isEdit = !!idValue;

            const guide = {
                firstName: document.getElementById("firstName").value,
                lastName: document.getElementById("lastName").value,
                email: document.getElementById("email").value,
                biography: document.getElementById("biography").value
            };

            if (isEdit) guide.id = id;

            const method = isEdit ? "PUT" : "POST";
            const url = isEdit
                ? `https://localhost:7172/api/guide/${id}`
                : "https://localhost:7172/api/guide";

            fetch(url, {
                method,
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                body: JSON.stringify(guide)
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => {
                        console.error("API error:", err);
                        alert("Failed to save guide.");
                    });
                }
                loadGuides();
                hideForm();
            })
            .catch(error => {
                console.error("Fetch error:", error);
                alert("An unexpected error occurred.");
            });
        }

        function deleteGuide(id) {
            if (confirm("Are you sure you want to delete this guide?")) {
                fetch(`https://localhost:7172/api/guide/${id}`, {
                    method: "DELETE",
                    headers: {
                        "Authorization": "Bearer " + token
                    }
                }).then(() => loadGuides());
            }
        }

        document.addEventListener("DOMContentLoaded", loadGuides);
    </script>
}